def outdir = "quicksand_${manifest.version}"

process {

    //
    // Workflow: Splitbam
    //

    if(params.bam){
        withName: "SPLITBAM" {
            publishDir = [
                path:"split",
                mode:"copy",
                pattern:"*.{bam,txt}"
            ]
        }
    }
    withName: "ESTIMATE_CC" {
        publishDir = [
            path:"${outdir}",
            mode:"copy",
            pattern:"*.{txt}" ]
    }

    //
    // Workflow: Bamfilter
    //

    withName: "SAMTOOLS_FILTER" {
        ext.args = "-F ${params.bamfilterflag}"
    }

    withName: "BAM_LENGTHFILTER" {
        ext.args = "-c ${params.bamfilter_length_cutoff} -l ${params.compression_level}"
    }

    withName: "mapbam:SAMTOOLS_FILTER" {
        ext.args = "-q ${params.mapbwa_quality_cutoff}"
    }

    //
    // workflow dedupbam
    //

    withName:"BAM_RMDUP" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: { "${meta.Taxon}/${meta.Reference}/3-deduped/${meta.id}.${meta.Family}.${meta.Species}_deduped.bam" },
            pattern: "deduped_*.bam",
        ]
        ext.args = "-r"
    }

    //
    // workflow bedfilterbam
    //

    withName:"BEDTOOLS_INTERSECT" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: { "${meta.Taxon}/${meta.Reference}/4-bedfiltered/${meta.id}.${meta.Family}.${meta.Species}_deduped_bedfiltered.bam" },
            pattern: "*.bam",
        ]
    }

    //
    // Deamination
    //

    withName:"BAM_DEAM_FIXED" {
        publishDir = [
            [
                path: "${outdir}/out",
                mode: "copy",
                saveAs: { "${meta.Taxon}/${meta.Reference}/5-deaminated/${meta.id}.${meta.Family}.${meta.Species}_deduped_deaminated_1term.bam" },
                pattern: "*1.bam",
            ],
            [
                path: "${outdir}/out",
                mode: "copy",
                saveAs: { "${meta.Taxon}/${meta.Reference}/5-deaminated/${meta.id}.${meta.Family}.${meta.Species}_deduped_deaminated_3term.bam" },
                pattern: "*3.bam",
            ]
        ]
       ext.args = "${params.doublestranded ? 'doublestranded' : ''}"
    }

    withName:"SAMTOOLS_MPILEUP" {
        ext.args = "--output-BP-5 --no-output-ends --no-output-ins --no-output-del --no-output-ins --no-output-del --min-BQ 0  -R"
        publishDir = [
            [
                path: "${outdir}/out",
                mode: "copy",
                saveAs: { "${meta.Taxon}/${meta.Reference}/6-mpileups/${meta.id}.${meta.Family}.${meta.Species}_all_mpiled.tsv" },
                pattern: "all.tsv"
            ],
            [
                path: "${outdir}/out",
                mode: "copy",
                saveAs: { "${meta.Taxon}/${meta.Reference}/6-mpileups/${meta.RG}.${meta.Family}.${meta.Species}_term1_mpiled.tsv" },
                pattern: "term1.tsv"
            ],
            [
                path: "${outdir}/out",
                mode: "copy",
                saveAs: { "${meta.Taxon}/${meta.Reference}/6-mpileups/${meta.RG}.${meta.Family}.${meta.Species}_term3_mpiled.tsv" },
                pattern: "term3.tsv"
            ]
        ]
    }
}

