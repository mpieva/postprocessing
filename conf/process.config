def outdir = "${params.reference_name}.${params.target_name}"
def filterstring = "L${params.bamfilter_minlength}MQ${params.bamfilter_minqual}"

process {

    //
    // Workflow: Splitbam
    //

    if(params.bam){
        withName: "SPLITBAM" {
            publishDir = [
                path:"${outdir}/SplitBAM",
                mode:"copy",
                pattern:"*.{bam,txt}"
            ]
        }
    }
    withName: "ESTIMATE_CC" {
        publishDir = [
            path:"${outdir}/SplitBAM",
            mode:"copy",
            pattern:"*.{txt}"
        ]
    }

    withName: "INDEX_STATS" {
        publishDir = [
            path:"${outdir}/SplitBAM",
            mode:"copy",
            pattern:"*.{txt}"
        ]
    }

    //
    // Workflow: Bamfilter
    //

    withName: "ANALYZE_BAM_CPP" {
        ext.args = [
            "-min_len ${params.bamfilter_minlength}",
            "-min_map_qual ${params.bamfilter_minqual}",
            "${params.bamfilter_keep_vendorfail ? '-count_f' : ''}",
            "${params.paired ? '-paired' : ''}"
        ].join(" ")

        publishDir = [
            path:"${outdir}/AnalyzeBAM_${filterstring}",
            mode:"copy",
            pattern:"*.{tsv}",
        ]
    }

    withName: "PLOT_READLENGTH" {
        publishDir = [
            path:"${outdir}/AnalyzeBAM_${filterstring}",
            mode:"copy",
            pattern:"*.{jpg}",
        ]
    }


    withName: "BAM_RMDUP" {
        ext.args = [
            "--ignore-rg",
            "${params.bamrmdup_cheap ? '-c' : ''}",
            "${params.bamrmdup_circular ? '-z ${params.bamrmdup_circular}' : ''}",
        ].join(" ")
        
        publishDir = [
            [
                path:"${outdir}/AnalyzeBAM_${filterstring}",
                mode:"copy",
                pattern:"*.{bam}",
            ],
            [
                path:"${outdir}/AnalyzeBAM_${filterstring}",
                mode:"copy",
                pattern:"*.{txt}",
                saveAs: { "${meta.RG}${meta.ontarget}.uniq.${filterstring}.txt" }
            ]
        ]
    }

    //
    // workflow: Substitutions
    //

    withName: "DEAM_BAM_CPP" {
        ext.args = "-min_len ${params.bamfilter_minlength}" 
    }

    //
    // 05 Deaminated Reads only
    //

    withName: "FILTER_BAM" {
        publishDir = [
            path:"${outdir}/FilterBAM_${filterstring}_3termini",
            mode:"copy",
            pattern:"*.bam" ]
        ext.args = "-p3 0,-1,-2 -p5 0,1,2 -suffix deam3_or_5"
    }

}